"use client";

import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { FiEdit3 } from "react-icons/fi";
import { RiDeleteBin6Line } from "react-icons/ri";

interface Budget {
  _id: string;
  name: string;
  limit: number;
  spent: number;
  isAutoGenerated?: boolean;
}

interface BudgetCardProps {
  budget: Budget;
  isLocked?: boolean;
}

const BudgetCard: React.FC<BudgetCardProps> = ({ budget, isLocked }) => {
  const percentageSpent =
    budget.limit > 0 ? (budget.spent / budget.limit) * 100 : 0;

  let progressColorClass = "bg-[#34D399]"; // hijau utama
  if (percentageSpent > 75 && percentageSpent <= 100) {
    progressColorClass = "bg-yellow-400";
  } else if (percentageSpent > 100) {
    progressColorClass = "bg-red-500";
  }

  return (
    <Card className="w-[250px] h-[180px] m-4 flex flex-col justify-between p-4 shadow-lg bg-[#0C1320]/80 border border-white/10 text-white rounded-2xl relative">
      <CardContent className="flex-grow flex flex-col justify-center items-center p-0 text-center">
        <h3 className="text-lg font-semibold mb-2 truncate">{budget.name}</h3>
        <p className="text-sm text-gray-400">
          Spent:{" "}
          <span className="font-medium">${budget.spent.toFixed(2)}</span> /{" "}
          <span className="font-medium">${budget.limit.toFixed(2)}</span>
        </p>
      </CardContent>

      <div className="w-full mt-4">
        <div className="w-full bg-gray-700 rounded-full h-2.5">
          <div
            className={`h-2.5 rounded-full ${progressColorClass}`}
            style={{ width: `${Math.min(percentageSpent, 100)}%` }}
          />
        </div>
        <p
          className={`text-xs mt-1 text-right font-medium ${
            percentageSpent > 100 ? "text-red-400" : "text-gray-400"
          }`}
        >
          {percentageSpent.toFixed(0)}% used
          {percentageSpent > 100 && (
            <span className="ml-1 font-bold"> (Over!)</span>
          )}
        </p>
      </div>

      {!isLocked && !budget.isAutoGenerated && (
        <div className="absolute top-2 right-2 flex gap-2">
          <button className="text-blue-400 hover:text-blue-300">
            <FiEdit3 size={18} />
          </button>
          <button className="text-red-500 hover:text-red-400">
            <RiDeleteBin6Line size={18} />
          </button>
        </div>
      )}
    </Card>
  );
};

export default BudgetCard;
